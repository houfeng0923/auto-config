{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"vue script name": {
		"scope": "javascript,typescript",
		"prefix": "vsn",
		"body": [
			"name: '${TM_FILENAME_BASE}',"
		],
		"description": "vue script data"
	},
	"vue script data": {
		"scope": "javascript,typescript",
		"prefix": "vsd",
		"body": [
			"data() {",
			"\treturn {$1};",
			"},$2",
		],
		"description": "vue script data"
	},
	"vue script computed": {
		"scope": "javascript,typescript",
		"prefix": "vsc",
		"body": [
			"computed: {",
			"\t$1() {$2}",
			"},$3",
		],
		"description": "vue script computed"
	},
	"vue script methods": {
		"scope": "javascript,typescript",
		"prefix": "vsm",
		"body": [
			"methods: {",
			"\t$1() {$2}",
			"},$3",
		],
		"description": "vue script methods"
	},
	"vue script watch": {
		"scope": "javascript,typescript",
		"prefix": "vsw",
		"body": [
			"watch: {",
			"\t$1() {$2}",
			"},$3",
		],
		"description": "vue script watch"
	}
}